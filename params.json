{"name":"Phconvert","tagline":"Reference library to write and read Photon-HDF5 files","body":"# phconvert\r\n\r\n*phconvert* is a python 2 & 3 library for writing and reading\r\n<a href=\"http://photon-hdf5.org/\" target=\"_blank\">Photon-HDF5</a>\r\nfiles, a file format for time stamp-based single-molecule spectroscopy.\r\nAdditionally, *phconvert* can convert a few common binary formats\r\nused in in single-molecule spectroscopy (PicoQuant .HT3,\r\nBecker & Hickl .SPC/.SET) to Photon-HDF5.\r\n\r\nFor questions or issues running this software please use the \r\n[Photon-HDF5 Google Group](https://groups.google.com/forum/#!forum/photon-hdf5)\r\nor open an [issue on GitHub](https://github.com/Photon-HDF5/phconvert/issues).\r\n\r\n## Quick-start: Converting files to Photon-HDF5\r\n\r\nConverting one of the supported files formats to Photon-HDF5 does not require \r\nbeing able to program in python. All you need is running the appropriate \"notebook\"\r\ncorresponding to the source format and follow the instructions therein.\r\n\r\nTo run a notebook on your machine, you need to install the *Jupyter Notebook App*. \r\nA quick-start guide on installing and running the *Jupyter Notebook App* is available here:\r\n\r\n- <a href=\"http://jupyter-notebook-beginner-guide.readthedocs.org/\" target=\"_blank\">Jupyter/IPython Notebook Quick Start Guide</a>\r\n\r\nNext, you need to install the *phconvert* library with the command (typed in a Terminal window for Mac and Linux, or in the cmd prompt on Windows):\r\n\r\n    conda install -c tritemio phconvert\r\n    \r\nFinally, you can download one of the provided notebooks and run it on your machine.\r\nTo download all notebooks in one step, download the \r\n[phconvert zip](https://github.com/Photon-HDF5/phconvert/archive/master.zip), \r\nwhich contains all the notebooks in the `notebooks` subfolder.\r\n\r\n###For questions or issues:\r\n\r\n- [Open an GitHub issue](https://github.com/Photon-HDF5/phconvert/issues) or \r\n- Ask a question on the [Photon-HDF5 Google Group](https://groups.google.com/forum/#!forum/photon-hdf5).\r\n\r\n\r\n## Project details\r\n\r\n*phconvert* repository contains a python package (library) and a set of\r\n[notebooks](https://github.com/Photon-HDF5/phconvert/tree/master/notebooks) \r\n([online viewer](http://nbviewer.ipython.org/github/Photon-HDF5/phconvert/tree/master/notebooks/)) \r\nwhich show how to convert other file formats to Photon-HDF5.\r\n\r\n*phconvert* tests the compliance to the Photon-HDF5 specifications\r\nbefore saving a new files and automatically adds description \r\nattributes for each field.\r\n\r\n## Read Photon-HDF5 files\r\n\r\nIn case you just want to read Photon-HDF5 files, phconvert is not\r\nnecessary (although it provides some helper functions).\r\nPhoton-HDF5 files can be opened with a standard HDF5 viewer\r\n[HDFView](https://www.hdfgroup.org/products/java/hdfview/).\r\nMoreover, we provide code examples on reading Photon-HDF5 files\r\nin multiple languages in \r\n[this repository](https://github.com/Photon-HDF5/photon_hdf5_reading_examples).\r\n\r\n## Installation\r\n\r\nThe recommended way to install *phconvert* is by using conda (which first requires installing the python distribution [Anaconda](https://store.continuum.io/cshop/anaconda/) from Continuum):\r\n\r\n    conda install -c tritemio phconvert\r\n\r\nYou can also install *phconvert* through PIP (which first requires installing python, and the numpy and pytables libraries):\r\n\r\n    pip install phconvert\r\n\r\nFinally, another way consists in downloading the sources and executing:\r\n\r\n    python setup.py build\r\n    python setup.py install\r\n\r\nNote: all dependencies need to be installed first.\r\n\r\n## Dependencies\r\n\r\n- python 2.7, 3.3 or greater\r\n- future\r\n- numpy >=1.9\r\n- pytables >=3.1\r\n- numba (optional) *to enable a fast HT3 file reader*\r\n\r\n> **Note**\r\n> when installing via `conda` all the dependencies are automatically installed.\r\n\r\n\r\n## The phconvert library (for developers)\r\n\r\nThe *phconvert* library contains two main modules: `hdf5` and `loader`. The former contains \r\nthe function `save_photon_hdf5()` which is used to create Photon-HDF5 files.\r\n\r\nThe `save_photon_hdf5()` function requires the data to be saved as argument.\r\nThe data needs to have the hierarchical structure of a Photon-HDF5 file. \r\nIn practice, we use a standard python dictionary: each keys is a Photon-HDF5 field name and\r\neach value contains data (e.g. array, string, etc..) or another dictionary\r\n(in which case, it represents an HDF5 sub-group). Similarly, sub-dictionaries \r\ncontain data or other dictionaries, as needed to represent the hierachy of Photon-HDF5 files.\r\n\r\nThe `loader` module contains loader functions which load data from disk and return a dictionary\r\nto be passed to `save_photon_hdf5()`. These functions can be used as examples\r\nwhen converting a new unsupported file format.\r\n\r\nThe `loader` module contains high-level functions which \"fill\" the dictionary\r\nwith the appropriate arrays. The actual decoding of the input binary files is perfomed\r\nby low-level functions in other modules (`smreader.py`, `pqreader.py`, `bhreader.py`).\r\nWhen trying to decode a new file format, these modules can provide useful examples.\r\n\r\nThe phconvert repository also contains a JSON specification of the Photon-HDF5 format:\r\n\r\n- [photon-hdf5_specs.json](https://github.com/Photon-HDF5/phconvert/blob/master/phconvert/specs/photon-hdf5_specs.json)\r\n\r\n\r\n## License\r\n\r\n*phconvert* is released under the open source MIT license.\r\n\r\n\r\n## Acknowledgements\r\nThis work was supported by NIH Grant R01-GM95904.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}