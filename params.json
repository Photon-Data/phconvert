{"name":"Phconvert","tagline":"Reference library to write and read Photon-HDF5 files","body":"# phconvert\r\n\r\n*phconvert* is python 2/3 library for writing and reading\r\n<a href=\"http://photon-hdf5.org/\" target=\"_blank\">Photon-HDF5</a>\r\nfiles, a file format for timestamp-based single-molecule spectroscopy.\r\nAdditionally, *phconvert* can convert a few common binary formats\r\nused in in single-molecule spectroscopy (PicoQuant .HT3,\r\nBecker & Hickl .SPC/.SET) to Photon-HDF5.\r\n\r\n## Quick-start: Converting files to Photon-HDF5\r\n\r\nConverting one of the supported files formats to Photon-HDF5 does not require \r\nbeing able to program in python. All you need is running the appropriate notebook\r\nfor your input format and follow the instructions therein.\r\n\r\nTo run a notebook on your machine you need to install the *Jupyter Notebook App*. \r\nA quick-start guide on installing and running the *Jupyter Notebook App* is available here:\r\n\r\n- <a href=\"http://jupyter-notebook-beginner-guide.readthedocs.org/\" target=\"_blank\">Jupyter/IPython Notebook Quick Start Guide</a>\r\n\r\nThen you need to install the *phconvert* library with the command (type it in the terminal, cmd on windows):\r\n\r\n    conda install -c tritemio phconvert\r\n    \r\nFinally you can download one of the provided notebooks and run it on your machine.\r\nTo download all the notebooks in one step you can download the \r\n[phconvert zip](https://github.com/Photon-HDF5/phconvert/archive/master.zip), \r\nwhich contains all the notebooks in the `notebooks` subfolder.\r\n\r\n## Project details\r\n\r\n*phconvert* repository contains a python packages (library) and a set of\r\n[notebooks](https://github.com/Photon-HDF5/phconvert/tree/master/notebooks) \r\n([online viewer](http://nbviewer.ipython.org/github/Photon-HDF5/phconvert/tree/master/notebooks/)) \r\nthat show how to convert other formats to Photon-HDF5.\r\n\r\n*phconvert* tests the compliance to the Photon-HDF5 specifications\r\nbefore saving a new files and it automatically adds description \r\nattributes for each field.\r\n\r\n## Read Photon-HDF5 files\r\n\r\nIn case you just want to read Photon-HDF5 files, phconvert is not\r\nnecessary (although it provides some helper functions).\r\nPhoton-HDF5 files can be opened with the standard HDF5 viewer\r\n[HDFView](https://www.hdfgroup.org/products/java/hdfview/).\r\nMoreover, we provide code examples on reading Photon-HDF5 files\r\nin multiple languages in \r\n[this repository](https://github.com/Photon-HDF5/photon_hdf5_reading_examples).\r\n\r\n## Installation\r\n\r\nThe recommended way to install *phconvert* is by using conda (requires installing [Continuum Anaconda](https://store.continuum.io/cshop/anaconda/) first):\r\n\r\n    conda install -c tritemio phconvert\r\n\r\nYou can also install through PIP (requires installing python, numpy and pytables first):\r\n\r\n    pip install phconvert\r\n\r\nor by downloading the sources and doing the usual (all dependencies need to be installed first):\r\n\r\n    python setup.py build\r\n    python setup.py install\r\n\r\n## Dependencies\r\n\r\n- python 2.7, 3.3 or greater\r\n- future\r\n- numpy >=1.9\r\n- pytables >=3.1\r\n- numba (optional) *to enable a fast HT3 file reader*\r\n\r\n> **Note**\r\n> when installing via `conda` all the dependencies are automatically installed.\r\n\r\n\r\n## The phconvert library (for developers)\r\n\r\nThe *phconvert* library contains two main modules `hdf5` and `loader`. The former contains \r\nthe function `save_photon_hdf5()` that is used to create Photon-HDF5 files.\r\n\r\nThe function `save_photon_hdf5()` requires as an argument the data to be saved.\r\nThis input data needs to have the hierarchical structure of a Photon-HDF5 file. \r\nIn practice we use a standard python dict: each keys is a Photon-HDF5 field name and\r\neach value contains data (e.g. array, string, etc..) or another dict \r\n(in this case it represents an HDF5 sub-group). Similarly, sub-dictionaries \r\ncontain data or other dict in order to represent the hierachy of Photon-HDF5 files.\r\n\r\nThe module `loader` contains loader functions that load data from disk and return a dict\r\nobject to be passed to `save_photon_hdf5()`. These functions can be used as examples\r\nwhen converting a new unsupported file format.\r\n\r\nThe `loader` module contains high-level functions that \"fill\" the dict-based\r\nwith the appropriate arrays. The actual decoding of the input binary files is perfomed\r\nby low-level functions in other modules (`smreader.py`, `pqreader.py`, `bhreader.py`).\r\nTherefore when trying to decode a new file format you can look at those modules\r\nfor examples.\r\n\r\nThe phconvert repository also contains a JSON specification of the Photon-HDF5 format:\r\n\r\n- [photon-hdf5_specs.json](https://github.com/Photon-HDF5/phconvert/blob/master/phconvert/specs/photon-hdf5_specs.json)\r\n\r\n\r\n## License\r\n\r\n*phconvert* is released under the open source MIT license.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}